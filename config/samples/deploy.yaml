---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/name: serviceaccount
    app.kubernetes.io/instance: qdrant-standalone
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: qdrant-operator
    app.kubernetes.io/part-of: qdrant-operator
    app.kubernetes.io/managed-by: kustomize
  name: qdrant-standalone
  namespace: qdrant
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/instance: qdrant-standalone
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: qdrant-team
    app.kubernetes.io/part-of: qdrant
    app.kubernetes.io/managed-by: kustomize
  name: qdrant-camel-k
rules:
  - apiGroups:
      - camel.apache.org
    resources:
      - kameletbindings
      - integrations
      - kamelets
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - pods
      - pods/log
    verbs:
      - get
      - watch
      - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/instance: qdrant-standalone
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: qdrant-team
    app.kubernetes.io/part-of: qdrant
    app.kubernetes.io/managed-by: kustomize
  name: qdrant-standalone
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: qdrant-camel-k
subjects:
  - kind: ServiceAccount
    name: qdrant-standalone
    namespace: qdrant
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: designer
    app.kubernetes.io/instance: qdrant-standalone
    app.kubernetes.io/managed-by: qdrant-team
    app.kubernetes.io/name: qdrant
    app.kubernetes.io/part-of: qdrant
  name: qdrant
  namespace: qdrant
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: designer
      app.kubernetes.io/instance: qdrant-standalone
      app.kubernetes.io/managed-by: qdrant-team
      app.kubernetes.io/name: qdrant
      app.kubernetes.io/part-of: qdrant
  template:
    metadata:
      labels:
        app.kubernetes.io/component: designer
        app.kubernetes.io/instance: qdrant-standalone
        app.kubernetes.io/managed-by: qdrant-team
        app.kubernetes.io/name: qdrant
        app.kubernetes.io/part-of: qdrant
    spec:
      serviceAccountName: qdrant-standalone
      containers:
        - env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
          image: 'qdrantio/standalone:main-jvm'
          imagePullPolicy: Always
          name: standalone
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /q/health/live
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 1
            successThreshold: 1
            timeoutSeconds: 10
          readinessProbe:
            failureThreshold: 10
            httpGet:
              path: /q/health/ready
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 1
            successThreshold: 1
            timeoutSeconds: 10
          ports:
            - containerPort: 8081
              name: http
              protocol: TCP
          resources:
            requests:
              cpu: "500m"
              memory: "600Mi"